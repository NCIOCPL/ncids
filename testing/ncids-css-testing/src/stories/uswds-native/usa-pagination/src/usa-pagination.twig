{# changed from uswds #}
{# changes svg image path #}
{# fixes broken macros #}

{#
The full pagination data object is passed so we can access current state, aria labels, and text labels.
#}
{% macro paginationArrow(direction, pagination) %}

  {% set link_attrs = {
    'class': 'usa-pagination__link usa-pagination__'  ~ direction ~ '-page',
    'aria_label': pagination[direction]['label'] ~ ' ' ~ pagination.page_label | lower
  } %}

  <li class="usa-pagination__item usa-pagination__arrow">
    <a
      href="{{ placeholder_link | default("javascript:void(0);") }}"
      class="{{ link_attrs.class }}"
      aria-label="{{ link_attrs.aria_label }}"
    >
      {% if direction is same as('previous') %}
        <svg class="usa-icon" aria-hidden="true" role="img">
          <use xlink:href="{{ img_path }}#{{ pagination[direction]['icon_name'] }}"></use>
        </svg>
      {% endif %}
      <span class="usa-pagination__link-text">
        {{ pagination[direction]['label'] }}
      </span>
      {% if direction is same as('next') %}
        <svg class="usa-icon" aria-hidden="true" role="img">
          <use xlink:href="{{ img_path }}#{{ pagination[direction]['icon_name'] }}"></use>
        </svg>
      {% endif %}
    </a>
  </li>
{% endmacro %}

{% import _self as macro %}


{% set overflow %}
  <li class="usa-pagination__item usa-pagination__overflow" role="presentation">
    <span>
      â€¦
    </span>
  </li>
{% endset %}

<nav aria-label="{{ aria_label }}" class="usa-pagination">
  <ul class="usa-pagination__list">
    {% block pagination_content %}
      {# Previous page #}
      {# Don't show `Previous` button if on first page #}
      {% if pagination.current > 1 %}
        {{ macro.paginationArrow('previous', pagination) }}
      {% endif %}

      {% if not pagination.unbounded %}
        {% include "@components/usa-pagination/src/includes/_pagination-numbers--default.twig" %}
      {% else %}
        {% include "@components/usa-pagination/src/includes/_pagination-numbers--unbounded.twig" %}
      {% endif %}

      {# Next page #}
      {# Don't show `next` button if on last page #}
      {% if pagination.current != pagination.items %}
        {{ macro.paginationArrow('next', pagination) }}
      {% endif %}
    {% endblock %}
  </ul>
</nav>
